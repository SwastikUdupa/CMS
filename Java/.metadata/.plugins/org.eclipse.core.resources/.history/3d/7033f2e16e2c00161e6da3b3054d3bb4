import javax.swing.*;
import java.util.Vector;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.sql.*;
public class StudentInfo extends JFrame implements ActionListener {
	
	JTextField txtContactId,txtContactTitle,txtFirstName,txtMiddleName,txtEmailId,
	txtLastName,txtEducation,txtPhoneNumber,txtCellNumber,txtStreet,txtCity,txtState,txtPincode,txtSave;
	Connection cn;
	Statement sm;
	ResultSet rs;
	JComboBox titleList; 
	JButton btnNew,btnSave,btnDelete,btnExit,btnFirst,btnLast,btnNext,btnPrevious,btnNew2,btnSave2,btnDelete2,btnExit2,btnFirst2,btnLast2,btnNext2,btnPrevious2;
	public StudentInfo(){
		super("Student Information Application");
		initializeComponents();
		initializeMenu();
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		this.setSize(450,500);
		this.setVisible(true);
		try {
			Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
			String cString = "jdbc:odbc:Driver={Microsoft Access Driver (*.mdb)};dbq=E:\\Swastik\\SI.mdb";
			cn = DriverManager.getConnection(cString);
			sm = cn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_UPDATABLE);
			rs = sm.executeQuery("Select * from StudentInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		firstClick();
	}
	
	
	private void initializeComponents() {
		
		Container c = this.getContentPane();
		c.setLayout(new BorderLayout());
		JTabbedPane tabPane=new JTabbedPane();
		JPanel panelFields1 = new JPanel(new GridLayout(11, 2, 10, 10));
		
		panelFields1.add(new JLabel("Contact Id:", JLabel.RIGHT));
		txtContactId = new JTextField(20);
		panelFields1.add(txtContactId);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		panelFields1.add(new JLabel("Contact Title:", JLabel.RIGHT));
		String[] titleString={"Mr","Mrs","Dr","Prof","Ms","Master"};
		titleList=new JComboBox(titleString);
		titleList.setSelectedIndex(5);
		titleList.addActionListener(this);
		panelFields1.add(titleList);
		
		
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		panelFields1.add(new JLabel("First Name:", JLabel.RIGHT));
		txtFirstName = new JTextField(20);
		panelFields1.add(txtFirstName);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		panelFields1.add(new JLabel("Middle Name", JLabel.RIGHT));
		txtMiddleName = new JTextField(20);
		panelFields1.add(txtMiddleName);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		panelFields1.add(new JLabel("Last Name:", JLabel.RIGHT));
		txtLastName = new JTextField(20);
		panelFields1.add(txtLastName);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		panelFields1.add(new JLabel("Education:", JLabel.RIGHT));
		txtEducation = new JTextField(20);
		panelFields1.add(txtEducation);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		
		
		panelFields1.add(new JLabel("Phone Number:", JLabel.RIGHT));
		txtPhoneNumber= new JTextField(20);
		panelFields1.add(txtPhoneNumber);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		panelFields1.add(new JLabel("Cell Number:", JLabel.RIGHT));
		txtCellNumber = new JTextField(20);
		panelFields1.add(txtCellNumber);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("Email Id:", JLabel.RIGHT));
		txtEmailId = new JTextField(20);
		panelFields1.add(txtEmailId);
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		panelFields1.add(new JLabel("", JLabel.RIGHT));
		
		
		
		btnNew = new JButton("New");
		panelFields1.add(btnNew);
		btnNew.addActionListener(this);

		btnSave = new JButton("Save");
		panelFields1.add(btnSave);
		btnSave.addActionListener(this);
		
		
		btnDelete = new JButton("Delete");
		panelFields1.add(btnDelete);
		btnDelete.addActionListener(this);
		
		
		btnExit = new JButton("Exit");
		panelFields1.add(btnExit);
		btnExit.addActionListener(this);
		
		
		btnFirst = new JButton("First");
		panelFields1.add(btnFirst);
		btnFirst.addActionListener(this);
		
		
		btnNext = new JButton("Next");
		panelFields1.add(btnNext);
		btnNext.addActionListener(this);
		
		
		btnPrevious = new JButton("Previous");
		panelFields1.add(btnPrevious);
		btnPrevious.addActionListener(this);
		
		
		btnLast = new JButton("Last");
		panelFields1.add(btnLast);
		btnLast.addActionListener(this);
		
		JPanel panelFields2 = new JPanel(new GridLayout(11, 2, 10, 10));

		panelFields2.add(new JLabel("Street:", JLabel.RIGHT));
		txtStreet= new JTextField(20);
		panelFields2.add(txtStreet);
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		
		
		panelFields2.add(new JLabel("City:", JLabel.RIGHT));
		txtCity = new JTextField(20);
		panelFields2.add(txtCity);
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		
		panelFields2.add(new JLabel("State:", JLabel.RIGHT));
		txtState = new JTextField(20);
		panelFields2.add(txtState);
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		
		panelFields2.add(new JLabel("Pincode:", JLabel.RIGHT));
		txtPincode = new JTextField(20);
		panelFields2.add(txtPincode);
		
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		panelFields2.add(new JLabel("", JLabel.RIGHT));
		
		
		btnNew2 = new JButton("New");
		panelFields2.add(btnNew2);
		btnNew2.addActionListener(this);

		btnSave2 = new JButton("Save");
		panelFields2.add(btnSave2);
		btnSave2.addActionListener(this);
		
		
		btnDelete2 = new JButton("Delete");
		panelFields2.add(btnDelete2);
		btnDelete2.addActionListener(this);
		
		
		btnExit2 = new JButton("Exit");
		panelFields2.add(btnExit2);
		btnExit2.addActionListener(this);
		
		
		btnFirst2 = new JButton("First");
		panelFields2.add(btnFirst2);
		btnFirst2.addActionListener(this);
		
		
		btnNext2 = new JButton("Next");
		panelFields2.add(btnNext2);
		btnNext2.addActionListener(this);
		
		
		btnPrevious2 = new JButton("Previous");
		panelFields2.add(btnPrevious2);
		btnPrevious2.addActionListener(this);
		
		
		btnLast2 = new JButton("Last");
		panelFields2.add(btnLast2);
		btnLast2.addActionListener(this);
		
		
		
		tabPane.addTab("Basic", panelFields1);
		tabPane.addTab("Address",panelFields2);
		c.add(tabPane, "Center");
		c.add(new JLabel(" "), "North");
		c.add(new JLabel(" "), "South");
		c.add(new JLabel(" "), "East");
		c.add(new JLabel(" "),"West");
		

	}

	private void initializeMenu(){
		JMenuBar mb = new JMenuBar();
		JMenu file= new JMenu("File");
		JMenuItem metal = new JMenuItem("Metal");
		file.add(metal);
		metal.addActionListener(this);
		JMenuItem motif = new JMenuItem("Motif");
		file.add(motif);
		motif.addActionListener(this);
		JMenuItem window = new JMenuItem("Windows");
		file.add(window);
		window.addActionListener(this);
		file.addSeparator();
		JMenuItem exit = new JMenuItem("Exit");
		file.add(exit);
		exit.addActionListener(this);
		mb.add(file);
		this.setJMenuBar(mb);
			
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		String strAction = e.getActionCommand();
		if (e.getSource()==btnExit|| e.getSource()==btnExit2) {
			dispose();
		}
		if (e.getSource()==btnNew|| e.getSource()==btnNew2)  {
			newClick();
		}
		if (e.getSource()==btnFirst|| e.getSource()==btnFirst2)  {
			firstClick();
		}
		if (e.getSource()==btnNext|| e.getSource()==btnNext2) {
			nextClick();
		}
		if (e.getSource()==btnLast|| e.getSource()==btnLast2){
			lastClick();
		}
		if (e.getSource()==btnPrevious|| e.getSource()==btnPrevious2) {
			previousClick();
		}
		if (e.getSource()==btnSave|| e.getSource()==btnSave2) {
			saveClick();
		}
		if (e.getSource()==btnDelete|| e.getSource()==btnDelete2) {
			deleteClick();
		}
		if(strAction.equalsIgnoreCase("metal")){
			try{
				UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
				SwingUtilities.updateComponentTreeUI(getContentPane());
			}catch(Exception e1){
				e1.printStackTrace();
			}
		}
		if(strAction.equalsIgnoreCase("motif")){
			try{
				UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
				SwingUtilities.updateComponentTreeUI(getContentPane());
			}catch(Exception e1){
				e1.printStackTrace();
			}
		}
		if(strAction.equalsIgnoreCase("windows")){
			try{
				UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
				SwingUtilities.updateComponentTreeUI(getContentPane());
			}catch(Exception e1){
				e1.printStackTrace();
			}
		}

	}
	
	private void newClick(){
		btnNew.setEnabled(false);
		btnNew2.setEnabled(false);
		resetFields();
	}
	private void resetFields(){
		txtContactId.setText("");
		titleList.setSelectedIndex(4);
		txtFirstName.setText("");
		txtMiddleName.setText("");
		txtLastName.setText("");
		txtEducation.setText("");
		txtStreet.setText("");
		txtCity.setText("");
		txtState.setText("");
		txtPincode.setText("");
		txtPhoneNumber.setText("");
		txtCellNumber.setText("");
		txtEmailId.setText("");
		txtContactId.setEditable(true);
		titleList.setEnabled(true);
		txtFirstName.setEditable(true);
		txtMiddleName.setEditable(true);
		txtLastName.setEditable(true);
		txtEducation.setEditable(true);
		txtStreet.setEditable(true);
		txtCity.setEditable(true);
		txtState.setEditable(true);
		txtPincode.setEditable(true);
		txtPhoneNumber.setEditable(true);
		txtCellNumber.setEditable(true);
		txtEmailId.setEditable(true);
	}
	public void dispose(){
		super.dispose();
		try{
			rs.close();
			sm.close();
			cn.close();
		}catch(Exception e){
			e.printStackTrace();
		}
		System.exit(0);
	}
	private void populateRecord(){
		try{
			txtContactId.setText(rs.getString("ContactId"));
			titleList.setSelectedItem(rs.getString("ContactTitle"));
			txtFirstName.setText(rs.getString("FirstName"));
			txtMiddleName.setText(rs.getString("MiddleName"));
			txtLastName.setText(rs.getString("LastName"));
			txtEducation.setText(rs.getString("Education"));
			txtStreet.setText(rs.getString("Street"));
			txtCity.setText(rs.getString("City"));
			txtState.setText(rs.getString("State"));
			txtPincode.setText(rs.getString("Pincode"));
			txtPhoneNumber.setText(rs.getString("PhoneNumber"));
			txtCellNumber.setText(rs.getString("CellNumber"));
			txtEmailId.setText(rs.getString("EmailId"));
			txtContactId.setEditable(false);
			titleList.setEnabled(false);
			txtFirstName.setEditable(false);
			txtMiddleName.setEditable(false);
			txtLastName.setEditable(false);
			txtEducation.setEditable(false);
			txtStreet.setEditable(false);
			txtCity.setEditable(false);
			txtState.setEditable(false);
			txtPincode.setEditable(false);
			txtPhoneNumber.setEditable(false);
			txtCellNumber.setEditable(false);
			txtEmailId.setEditable(false);
			
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	private void firstClick(){
		try{
			rs.first();
			populateRecord();
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	private void nextClick(){
		try{
			rs.next();
			if(rs.isAfterLast()){
				firstClick();
				return;
			}
			populateRecord();
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	private void previousClick(){
		try{
			rs.previous();
			if(rs.isBeforeFirst()){
				lastClick();
				return;
			}
			populateRecord();
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	private void lastClick(){
		try{
			rs.last();
			populateRecord();
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	private void deleteClick(){
		int x= JOptionPane.showConfirmDialog(this,"Are you sure to delete?");
		if(x==JOptionPane.YES_OPTION){
			try{
				PreparedStatement ps= cn.prepareStatement("Delete from StudentInfo where ContactId=?");
				ps.setInt(1,Integer.parseInt(txtContactId.getText()));
				ps.execute();
				this.resetFields();
				rs=sm.executeQuery("Select * from StudentInfo");
			}catch(Exception e){
				e.printStackTrace();
			}
		}
	}
	
	
	private void saveClick2(){
if(btnNew.isEnabled()||btnNew2.isEnabled())
			
		{
			try{
				PreparedStatement ps= cn.prepareStatement("Update StudentInfo set ContactTitle=?,FirstName=?,MiddleName=?,LastName=?,Education=?,Street=?,City=?,State=?,Pincode=?,PhoneNumber=?,CellNumber=?,EmailId=? where ContactId=?");
				String values = titleList.getSelectedItem().toString();
				ps.setString(1,values);
				ps.setString(2,txtFirstName.getText());
				ps.setString(3,txtMiddleName.getText());
				ps.setString(4,txtLastName.getText());
				ps.setString(5,txtEducation.getText());
				ps.setString(6,txtStreet.getText());
				ps.setString(7,txtCity.getText());
				ps.setString(8,txtState.getText());
				ps.setString(9,txtPincode.getText());
				ps.setString(10,txtPhoneNumber.getText());
				ps.setString(11,txtCellNumber.getText());
				ps.setString(12,txtEmailId.getText());
				ps.setInt(13,Integer.parseInt(txtContactId.getText()));
				ps.execute();
				this.resetFields();
			}catch(Exception e){
				e.printStackTrace();
			}
		}
		else{
			try{
				PreparedStatement ps= cn.prepareStatement("Insert into StudentInfo values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
				ps.setInt(1,Integer.parseInt(txtContactId.getText()));
				String value = titleList.getSelectedItem().toString();
				ps.setString(2,value);
				ps.setString(3,txtFirstName.getText());
				ps.setString(4,txtMiddleName.getText());
				ps.setString(5,txtLastName.getText());
				ps.setString(6,txtEducation.getText());
				ps.setString(7,txtStreet.getText());
				ps.setString(8,txtCity.getText());
				ps.setString(9,txtState.getText());
				ps.setString(10,txtPincode.getText());
				ps.setString(11,txtPhoneNumber.getText());
				ps.setString(12,txtCellNumber.getText()); 
				ps.setString(13,txtEmailId.getText());
				ps.execute();
				this.resetFields();
			}catch(Exception e){
				e.printStackTrace();
			}
		}
		try{
			rs=sm.executeQuery("Select * from StudentInfo");
		}catch(Exception e){
			e.printStackTrace();
		}
		btnNew.setEnabled(true);
		btnNew2.setEnabled(true);
	}
	
	
	
	
	private void saveClick(){
			if(validated()){
				saveClick2();
			}
		}
	
	public boolean validated(){
		boolean flag=true;
		if(txtContactId.getText().equals("")||txtFirstName.getText().equals("")||txtMiddleName.getText().equals("")||txtLastName.getText().equals("")||txtEducation.getText().equals("")||txtStreet.getText().equals("")||txtCity.getText().equals("")||txtState.getText().equals("")||txtPincode.getText().equals("")||txtPhoneNumber.getText().equals("")||txtCellNumber.getText().equals("")||txtEmailId.getText().equals("")){
			flag=false;
		}
		else{
			flag=true;
		return flag;
	}
	
	
	public static void main(String aargs[]){
		new StudentInfo();
		
	}

}
